{"version":3,"sources":["api/shortcuts-api.js","reducers/shortcutReducer.js","constants/actionsConstants.js","components/CustomPopper.js","components/SearchView.js","actions/navbar.js","components/SimpleSearchView.js","components/NavBar.js","components/SidebarView.js","actions/shortcutActions.js","components/DroppableComponent.js","actions/dragDrop.js","components/CheckBox.js","components/QuickShortcut.js","components/DraggableComponent.js","components/ShortcutContainer.js","components/CustomChip.js","components/ChipList.js","components/TagsContainer.js","components/CustomDialog.js","components/Button.js","components/FiltersContainer.js","components/ContentView.js","components/MainBodyView.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["urlPrefix","api","createTagApi","tagValue","axios","post","value","then","response","catch","error","console","log","getShortcutsByTagApi","id","tag","deleteShortcutApi","delete","updateShortcutApi","name","url","tags","addShortcutApi","removeShortcutsApi","ids","makeShortcutFavouriteApi","shortcut","put","fetchMyFavouritesApi","get","_","require","shortcuts","intialData","editingShortcutDetails","isDialogOpen","selectedShortcuts","shortcutReducer","shortcutId","updatedShortcuts","state","action","type","payload","window","location","href","_id","selectedTagId","push","searchText","editingShortcut","remove","tagsMenuOpen","filteredTags","filter","indexOf","trim","isEmpty","tagId","newTags","context","searchedShortcuts","selectedTag","searchedTags","popperData","results","Object","values","forEach","isSelected","isChecked","selectedIds","isMyFavouritesClicked","CustomPopper","props","setWidth","instance","reference","popper","style","width","offsetWidth","options","onCreate","onUpdate","Popper","className","popperOptions","placement","open","anchorEl","children","SearchView","text","useState","setSearchText","setAnchorEl","handleTagOptionClicked","addTag","createTag","placeholder","aria-label","onChange","event","target","handleSearch","currentTarget","onBlur","onFocus","shouldOpenPopper","trimmedSearchText","length","map","data","key","onClick","bind","getPopperInnerView","getPopperView","disableButton","handleSearchClicked","dispatch","SimpleSearchView","classes","connect","handleSearchButtonClicked","SidebarView","handleTagClicked","filterByTag","TagClassName","a","deleteShortcuts","deletedShortcutsIds","handleDrop","onDragOver","ev","preventDefault","onDrop","dataTransfer","getData","CheckBox","checked","stopPropagation","handleOnChange","QuickShortcut","logoView","faviconURL","title","alt","height","src","favouriteIcon","isFavourite","handleClick","Tooltip","onCheckboxClicked","this","favouriteClicked","handleEditMenuClick","Draggable","draggable","onDragStart","setData","shortcutTailClicked","onSelection","makeShortcutFavourite","unshift","includes","CustomChip","label","clickable","onDelete","ChipList","tagsView","appliedTagIds","removeTag","TagsContainer","appliedTags","CustomDialog","editingName","editingUrl","React","setName","setUrl","isDoneHidden","isRemoveHidden","Dialog","aria-labelledby","e","DialogTitle","DialogContent","TextField","autoFocus","margin","fullWidth","DialogActions","disabled","handleRemoveButtonClicked","color","handleCancelButtonClicked","handleDoneButtonClicked","Button","isActive","handleOnClick","defaultProps","selectedShortcutIds","isMyFavouritesActive","handleShortcutSearch","myFavouritesClicked","doneButtonClicked","updateShortcut","addShortcut","cancelClicked","removeClicked","removeShortcut","toLowerCase","handleTagSearch","modalView","fetchTags","getTags","fetchShortcuts","useEffect","Home","App","store","createStore","applyMiddleware","thunk","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b5f12d9a.chunk.js","sourcesContent":["import axios from 'axios';\n\n\n/**\n * Get all shortcuts\n */\n\nconst urlPrefix = \"http://localhost:1234\";\n\nconst createTag = (tagValue) => {\n\n    //return await axios.post(urlPrefix + \"/tags\", {value: tagValue});\n    return axios.post(urlPrefix + \"/tags\", {value: tagValue})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n};\n\nconst getShortcutsByTag = (id) => {\n\n    return axios.post(urlPrefix + \"/tags/getShortcutsByTag\", {tag: id})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\n\n\nconst deleteShortcut = (id) => {\n    return axios.delete(urlPrefix + `/shortcuts/${id}`)\n        .then(function (response) {\n            return response\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\n\nconst updateShortcut = (id, name, url, tags) => {\n\n    return axios.post(urlPrefix + \"/shortcuts\", {name: name, url: url, tags: tags, id: id})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\n\nconst addShortcut = (name, url, tags) => {\n\n    return axios.post(urlPrefix + \"/shortcuts\", {name: name, url: url, tags: tags})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n};\n\n\nconst removeShortcuts = (ids) => {\n\n    return axios.post(urlPrefix + \"/shortcuts/delete\", {ids})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n};\n\nconst makeShortcutFavourite = (shortcut) => {\n\n    return axios.put(urlPrefix + \"/shortcuts/\", {...shortcut})\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n};\n\nconst fetchMyFavourites = () => {\n\n    return axios.get(urlPrefix + \"/shortcuts/favourites\")\n        .then(function (response) {\n            return response;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n};\n\n\nconst api = {\n    createTagApi: createTag,\n    getShortcutsByTagApi: getShortcutsByTag,\n    deleteShortcutApi: deleteShortcut,\n    updateShortcutApi: updateShortcut,\n    addShortcutApi: addShortcut,\n    removeShortcutsApi: removeShortcuts,\n    makeShortcutFavouriteApi :makeShortcutFavourite,\n    fetchMyFavouritesApi : fetchMyFavourites\n};\nexport default api;\n\n\n","import {\n    EDIT_MENU_CLICKED,\n    SHORTCUT_TAIL_CLICKED,\n    ADD_SHORTCUT,\n    UPDATE_SHORTCUT,\n    REMOVE_SHORTCUT,\n    ADD_TAG,\n    REMOVE_TAG,\n    FECTH_TAGS,\n    CREATE_TAG,\n    SEARCH_CLICKED,\n    CLEAR_MODAL_PROPS,\n    FILTER_BY_TAG,\n    HANDLE_DROP,\n    SHORTCUTS_FETCHED,\n    TAGS_FETCHED, SHORTCUT_SELECTED, DELETE_SHORTCUTS, FAVOURITE_SHORTCUT, FETCH_FAVOURITES\n} from \"../constants/actionsConstants\";\nimport {getShortcuts} from \"../api/shortcuts-api\";\n\nvar _ = require('lodash');\n\n\nlet tags = {\n    \"12\": {\n        \"id\": \"12\",\n        \"value\": \"spring\"\n    },\n    \"13\": {\n        \"id\": \"13\",\n        \"value\": \"spring\"\n    },\n    \"14\": {\n        \"id\": \"14\",\n        \"value\": \"spring\"\n    },\n    \"15\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },\n    /*\"16\": {\n        \"id\": \"12\",\n        \"value\": \"spring\"\n    },\n    \"17\": {\n        \"id\": \"13\",\n        \"value\": \"spring\"\n    },\n    \"18\": {\n        \"id\": \"14\",\n        \"value\": \"spring\"\n    },\n    \"19\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },\n    \"20\": {\n        \"id\": \"13\",\n        \"value\": \"spring\"\n    },\n    \"21\": {\n        \"id\": \"14\",\n        \"value\": \"spring\"\n    },\n    \"22\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },\n    \"23\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },\n    \"24\": {\n        \"id\": \"13\",\n        \"value\": \"spring\"\n    },\n    \"25\": {\n        \"id\": \"14\",\n        \"value\": \"spring\"\n    },\n    \"26\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },\"27\": {\n        \"id\": \"12\",\n        \"value\": \"spring\"\n    },\n    \"28\": {\n        \"id\": \"13\",\n        \"value\": \"spring\"\n    },\n    \"29\": {\n        \"id\": \"14\",\n        \"value\": \"spring\"\n    },\n    \"30\": {\n        \"id\": \"15\",\n        \"value\": \"spring\"\n    },*/\n\n\n};\n\nlet shortcuts = {\n    \"123\": {\n        \"id\": \"123\",\n        \"name\": \"test\",\n        \"url\": \"https://www.dailymotion.com/video/x7r6aem\",\n        \"tags\": []\n    },\n    \"1234\": {\n        \"id\": \"1234\",\n        \"name\": \"test\",\n        \"url\": \"https://www.dailymotion.com/video/x7r6aem\",\n        \"tags\": []\n    },\n    \"1235\": {\n        \"id\": \"1235\",\n        \"name\": \"test\",\n        \"url\": \"https://www.dailymotion.com/video/x7r6aem\",\n        \"tags\": []\n    },\n    \"1236\": {\n        \"id\": \"1236\",\n        \"name\": \"test\",\n        \"url\": \"https://www.dailymotion.com/video/x7r6aem\",\n        \"tags\": []\n    }\n}\n\nconst intialData = {\n    shortcuts: {},\n    editingShortcutDetails: {\n        shortcut: {}\n    },\n    isDialogOpen: false,\n    tags: {},\n    selectedShortcuts: []\n\n\n};\n\nconst shortcutReducer = (state = intialData, action) => {\n    let shortcutId;\n    let updatedShortcuts;\n    switch (action.type) {\n        case EDIT_MENU_CLICKED :\n            shortcutId = action.payload.id;\n            state = {\n                ...state,\n                editingShortcutDetails: {\n                    shortcut: state.shortcuts[shortcutId]\n                },\n                isDialogOpen: !state.isDialogOpen\n            };\n            break;\n        case SHORTCUT_TAIL_CLICKED : {\n\n            shortcutId = action.payload.id;\n            if (shortcutId === \"ADD_SHORTCUT\") {\n                state = {\n                    ...state,\n                    editingShortcutDetails: {\n                        shortcut: {\n                            tags: []\n                        }\n                    },\n                    isDialogOpen: true\n                }\n            } else {\n                window.location.href = state.shortcuts[shortcutId].url;\n            }\n            break;\n        }\n        case ADD_SHORTCUT : {\n            let shortcut = action.payload.shortcut;\n            let updatedShortcuts = {[shortcut._id]: shortcut, ...state.shortcuts,};\n            shortcuts = updatedShortcuts;\n            state = {\n                ...state,\n                shortcuts: updatedShortcuts,\n                isDialogOpen: !state.isDialogOpen\n            };\n\n            break;\n        }\n        case REMOVE_SHORTCUT : {\n            let shortcuts = action.payload.shortcuts;\n            state = {\n                ...state,\n                shortcuts,\n                isDialogOpen: false\n            };\n            break;\n        }\n        case UPDATE_SHORTCUT : {\n\n            let shortcut = action.payload.shortcut;\n            updatedShortcuts = {\n                ...state.shortcuts, [shortcut._id]: shortcut\n            };\n            state = {\n                ...state,\n                shortcuts: updatedShortcuts,\n                isDialogOpen: !state.isDialogOpen\n            };\n\n            break;\n        }\n        case ADD_TAG : {\n            let selectedTagId = action.payload.id;\n            console.log(selectedTagId);\n            if (!selectedTagId) {\n                return\n            }\n            let editingShortcutDetails = {...state.editingShortcutDetails};\n            editingShortcutDetails.shortcut.tags.push(selectedTagId);\n            editingShortcutDetails.searchText = \"\";\n            state = {\n                ...state,\n                editingShortcutDetails\n            };\n            break;\n        }\n        case REMOVE_TAG : {\n            let selectedTagId = action.payload.id;\n            let editingShortcutDetails = {...state.editingShortcutDetails};\n            let editingShortcut = editingShortcutDetails.shortcut;\n            _.remove(editingShortcut.tags, (tag) => {\n                return tag === selectedTagId\n            });\n            console.log(editingShortcutDetails);\n            state = {\n                ...state,\n                tagsMenuOpen: !state.tagsMenuOpen,\n                editingShortcutDetails\n            };\n\n            break;\n        }\n        case FECTH_TAGS : {\n            let searchText = action.payload.searchText;\n            let filteredTags = _.filter(state.tags, (tag) => {\n                return tag.value.indexOf(searchText) > -1\n            });\n            searchText = _.trim(searchText);\n            if (_.isEmpty(searchText)) {\n                filteredTags = intialData.tags;\n            }\n\n            state = {\n                ...state,\n                tags: filteredTags,\n                tagsMenuOpen: true\n            };\n            break;\n        }\n        case CREATE_TAG : {\n            let tag = action.payload.tag;\n            let tagId = tag._id;\n            // append to existing tags\n            let newTags = {[tagId]: tag, ...state.tags};\n            let editingShortcutDetails = {...state.editingShortcutDetails};\n            if (_.isEmpty(editingShortcutDetails.shortcut.tags)) {\n                editingShortcutDetails.shortcut.tags = [];\n            }\n\n            editingShortcutDetails.shortcut.tags.push(tagId);\n            state = {\n                ...state,\n                tags: newTags,\n                editingShortcutDetails\n            };\n\n            break;\n        }\n        case SEARCH_CLICKED : {\n            let context = action.payload.context;\n            switch (context) {\n                case \"shortcut\" : {\n                    let searchedShortcuts = action.payload.shortcuts;\n                    state = {\n                        ...state,\n                        shortcuts: searchedShortcuts,\n                        selectedTag: null\n                    };\n                }\n                    break;\n                case \"tags\": {\n                    let searchedTags = action.payload.tags;\n                    state = {\n                        ...state,\n                        tags: searchedTags\n                    };\n                }\n                case \"shortcut_tags\" : {\n                    let filteredTags = action.payload.tags;\n                    state = {\n                        ...state,\n                        editingShortcutDetails: {...state.editingShortcutDetails, popperData: filteredTags}\n                    };\n\n                }\n            }\n            ;\n        }\n            break;\n        case CLEAR_MODAL_PROPS : {\n            state = {\n                ...state,\n                isDialogOpen: false,\n                editingShortcut: {}\n            };\n            break;\n        }\n        case FILTER_BY_TAG : {\n            let tagId = action.payload.id;\n            if (tagId === state.selectedTag) {\n                state = {\n                    ...state,\n                    shortcuts,\n                    selectedTag: \"\"\n                };\n                break;\n            }\n            state = {\n                ...state,\n                shortcuts: action.payload.shortcuts,\n                selectedTag: tagId\n            };\n        }\n            break;\n        case HANDLE_DROP : {\n            let shortcutId = action.payload.id;\n            let shortcuts = {...state.shortcuts};\n            delete shortcuts[shortcutId];\n            state = {\n                ...state,\n                shortcuts\n            }\n        }\n            break;\n        case SHORTCUTS_FETCHED: {\n            let shortcuts = action.payload.shortcuts;\n            let results = {};\n            Object.values(shortcuts).forEach(shortcut => {\n                shortcut[\"id\"] = shortcut._id;\n                results[shortcut.id] = shortcut;\n            });\n            state = {\n                ...state,\n                shortcuts: results\n            };\n            break;\n        }\n\n        case TAGS_FETCHED: {\n            let tags = action.payload.tags;\n            let results = {};\n            tags.forEach(tag => {\n                tag[\"id\"] = tag._id;\n                results[tag.id] = tag;\n            });\n            state = {\n                ...state,\n                tags: results\n            }\n            break;\n        }\n\n        case SHORTCUT_SELECTED: {\n            let shortcutId = action.payload.id;\n            let isSelected = action.payload.isChecked;\n            let selectedIds = [...state.selectedShortcuts];\n            if (isSelected) {\n                selectedIds.push(shortcutId);\n            } else {\n                _.remove(selectedIds, (id) => {\n                    return id === shortcutId;\n                })\n            }\n\n\n            state = {\n                ...state,\n                selectedShortcuts: selectedIds\n            };\n            break;\n        }\n\n        case DELETE_SHORTCUTS : {\n            let shortcuts = action.payload.shortcuts;\n\n            state = {\n                ...state,\n                shortcuts: shortcuts,\n                selectedShortcuts: []\n            };\n            break;\n        }\n        case FAVOURITE_SHORTCUT : {\n            let shortcut = action.payload.shortcut;\n            let shortcuts = {...state.shortcuts};\n            shortcuts[shortcut._id] = shortcut;\n            state = {\n                ...state,\n                shortcuts: shortcuts,\n            };\n            break;\n        }\n        case FETCH_FAVOURITES : {\n            let shortcuts = action.payload.shortcuts;\n            state = {\n                ...state,\n                shortcuts: shortcuts,\n                isMyFavouritesClicked : !state.isMyFavouritesClicked\n            };\n            break;\n        }\n\n    }\n\n    return state;\n}\n\nexport default shortcutReducer;\n","export const DONE_CLICKED = 'DONE_CLICKED';\nexport const CANCEL_CLICKED = \"CANCEL_CLICKED\";\nexport const EDIT_MENU_CLICKED = \"EDIT_MENU_CLICKED\";\nexport const SHORTCUT_TAIL_CLICKED = \"SHORTCUT_TAIL_CLICKED\";\nexport const ADD_SHORTCUT = \"ADD_SHORTCUT\";\nexport const REMOVE_SHORTCUT = \"REMOVE_SHORTCUT\";\nexport const UPDATE_SHORTCUT = \"UPDATE_SHORTCUT\";\nexport const CLEAR_MODAL_PROPS = \"CLEAR_MODAL_PROPS\";\nexport const REMOVE_TAG = \"REMOVE_TAG\";\nexport const ADD_TAG = \"ADD_TAG\";\nexport const CREATE_TAG = \"CREATE_TAG\";\nexport const FECTH_TAGS = \"FECTH_TAGS\";\nexport const SEARCH_CLICKED = \"SEARCH_CLICKED\";\nexport const FILTER_BY_TAG = \"FILTER_BY_TAG\";\nexport const HANDLE_DROP = \"HANDLE_DROP\";\nexport const SHORTCUTS_FETCHED = \"SHORTCUTS_FETCHED\";\nexport const TAGS_FETCHED = \"TAGS_FETCHED\";\nexport const SHORTCUT_SELECTED = \"SHORTCUT_SELECTED\";\nexport const DELETE_SHORTCUTS = \"DELETE_SHORTCUTS\";\nexport const FAVOURITE_SHORTCUT= \"FAVOURITE_SHORTCUT\";\nexport const FETCH_FAVOURITES= \"FETCH_FAVOURITES\";\n\n\n\n\n\n","import React from 'react';\nimport Popper from '@material-ui/core/Popper';\n\nconst CustomPopper = (props) => {\n\n\n    const setWidth = ({instance: {reference, popper}})  =>{\n        // box-sizing: border-box\n        popper.style.width = `${reference.offsetWidth}px`;\n    };\n\n    const options = {\n        onCreate: setWidth,\n        onUpdate: setWidth\n    };\n    return (\n        <Popper id=\"custom-popper\" className=\"custom-popper\" popperOptions={options} placement=\"bottom-start\" open={props.open} anchorEl={props.anchorEl}>\n            {props.children}\n        </Popper>\n    )\n};\n\nexport default CustomPopper;\n","import React, {useState} from 'react';\nimport CustomPopper from \"./CustomPopper\";\nvar _ = require('lodash');\n\n\nconst SearchView = (props) => {\n\n    const text = props.searchText || \"\";\n    const [searchText, setSearchText] = useState(text);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOnChange = (event) => {\n        setSearchText(event.target.value);\n        props.handleSearch(props.context, event.target.value);\n\n        /*if (!event.target.value) {\n            setAnchorEl(null);\n            return;\n        }*/\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleBlur = (event) => {\n        //setAnchorEl(null);\n    };\n\n    const handleFocus = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const addTag= (id) => {\n        console.log(id);\n        props.addTag(id);\n        setSearchText(\"\");\n    };\n\n\n    const handleTagOptionClicked = (id) => {\n        setSearchText(\"\");\n      if(id === \"ADD_TAG\") {\n          props.createTag(searchText);\n          return;\n      }\n\n      props.addTag(id);\n    };\n\n\n\n    const getPopperInnerView = () => {\n        let popperData = props.popperData || [];\n        let trimmedSearchText  = searchText.trim();\n        if(popperData.length == 0 && !_.isEmpty(trimmedSearchText)) {\n            popperData.push({\n                _id : \"ADD_TAG\",\n                value : `Create tag \"${trimmedSearchText}\"`\n            })\n        }\n        return <div className=\"popper-data\">\n            <ul className=\"list-group\">\n                {popperData.map(data => <li className=\"list-group-item\" key={data._id}>\n                    <div className=\"tag-option\" onClick={handleTagOptionClicked.bind(this,data._id)}>{data.value}</div>\n                </li>)}\n            </ul>\n        </div>\n    };\n\n    const getPopperView = () => {\n        let shouldOpenPopper = false;\n        if (searchText && anchorEl) {\n            shouldOpenPopper = true;\n        }\n        return (<CustomPopper open={shouldOpenPopper} anchorEl={anchorEl}>\n            {getPopperInnerView()}\n        </CustomPopper>)\n\n    };\n\n\n    return (\n\n        <>\n            <input className=\"form-control mr-sm-2\"\n                   value={searchText}\n                   type=\"search\"\n                   placeholder={props.placeholder}\n                   aria-label=\"Search\"\n                   onChange={handleOnChange}\n                   onBlur={handleBlur}\n                   onFocus={handleFocus}\n            />\n            {\n                getPopperView()\n            }\n            {!props.disableButton &&\n            <button\n                className=\"btn btn-outline-success my-2 my-sm-0\"\n                type=\"submit\"\n                onClick={() => props.handleSearch(searchText)}\n            >Search</button>\n            }\n        </>\n    )\n};\n\nexport default SearchView;\n","import {SEARCH_CLICKED} from './../constants/actionsConstants'\nimport axios from \"axios\";\n\n\nexport const handleSearchClicked = (searchText, context) => {\n\n    return (dispatch) => {\n\n        searchText = searchText.trim();\n        switch (context) {\n            case \"tags\" : {\n                axios.post(\"http://localhost:1234/tags/search\", {searchText: searchText})\n                    .then(function (response) {\n                        return dispatch({\n                            type: SEARCH_CLICKED,\n                            payload: {\n                                tags: response.data.tags,\n                                context\n                            }\n                        });\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n                break;\n            case \"shortcut\" : {\n                axios.post(\"http://localhost:1234/shortcuts/search\", {searchText: searchText})\n                    .then(function (response) {\n                        return dispatch({\n                            type: SEARCH_CLICKED,\n                            payload: {\n                                shortcuts: response.data.shortcuts,\n                                context\n                            }\n                        });\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n                break;\n            case \"shortcut_tags\" : {\n                if(!searchText) return;\n                axios.post(\"http://localhost:1234/tags/search\", {searchText: searchText})\n                    .then(function (response) {\n                        return dispatch({\n                            type: SEARCH_CLICKED,\n                            payload: {\n                                tags: response.data.tags,\n                                context\n                            }\n                        });\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n        }\n    };\n};\n\nexport const handleShortcutSearch = (searchText) => {\n\n    return {\n        type: SEARCH_CLICKED,\n        payload: {\n            searchText\n        }\n    }\n};\n","import React, {useState} from 'react';\n\nconst SimpleSearchView = (props) => {\n    const [searchText, setSearchText] = useState();\n\n\n    const handleOnChange = (event) => {\n        setSearchText(event.target.value);\n        props.handleSearch(props.context, event.target.value);\n    };\n    let classes = \"form-control mr-sm-2\";\n    if(props.className) {\n        classes += ` ${props.className}`;\n    }\n    return (\n        <input className={classes}\n               value={searchText}\n               type=\"search\"\n               placeholder={props.placeholder}\n               aria-label=\"Search\"\n               onChange={handleOnChange}\n        />\n    )\n};\n\nexport default SimpleSearchView;\n","import React from 'react';\nimport SearchView from \"./SearchView\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleSearchClicked} from \"../actions/navbar\";\nimport SimpleSearchView from \"./SimpleSearchView\";\n\nconst NavBar = (props) => {\n    return (\n        <nav className=\"navbar navbar-light navigation\">\n            <a href=\"#\" className=\"navbar-brand\">Navbar</a>\n            <div>\n\n            </div>\n\n        </nav>\n    )\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        searchText : state.searchText,\n        popperData : state.popperData\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSearchButtonClicked: (context, searchText) => {\n            dispatch(handleSearchClicked(searchText, context))\n        }\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NavBar)\n\n","import React from 'react';\nimport SimpleSearchView from \"./SimpleSearchView\";\n\nconst SidebarView = (props) => {\n\n    const handleTagClicked = (id) => {\n        props.filterByTag(id);\n    };\n\n    let className = \"tag filter\";\n\n    return (\n        <div className=\"col col-md-2 sidebar\">\n\n            <div>\n            <SimpleSearchView context=\"tags\"\n                              placeholder={\"Search tags\"}\n                              handleSearch={props.handleSearch}\n                              className={\"black-theme\"}/>\n            </div>\n            <div className=\"side-menu-items\">\n                <ul>\n                    {Object.values(props.tags).map(tag => {\n\n                        let TagClassName = className;\n                        if(props.selectedTag === tag._id) {\n                            TagClassName += \" selected\"\n\n                        }\n                        return (<li>\n                            <div className={TagClassName}\n                                 onClick={handleTagClicked.bind(this, tag._id)}>\n                                {tag.value}\n                            </div>\n                        </li>)\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n};\n\nexport default SidebarView;\n","import {\n    ADD_SHORTCUT,\n    ADD_TAG,\n    CLEAR_MODAL_PROPS,\n    CREATE_TAG, DELETE_SHORTCUTS,\n    DONE_CLICKED,\n    EDIT_MENU_CLICKED,\n    FECTH_TAGS,\n    FILTER_BY_TAG,\n    REMOVE_SHORTCUT,\n    REMOVE_TAG,\n    SHORTCUT_TAIL_CLICKED,\n    SHORTCUTS_FETCHED,\n    UPDATE_SHORTCUT\n} from './../constants/actionsConstants'\nimport {FAVOURITE_SHORTCUT, FETCH_FAVOURITES, SHORTCUT_SELECTED, TAGS_FETCHED} from \"../constants/actionsConstants\";\nimport api from './../api/shortcuts-api';\n\nexport const editMenuClicked = (shortcutId) => {\n\n    console.log(\"shortcutId  \" + DONE_CLICKED);\n    return {\n        type: EDIT_MENU_CLICKED,\n        payload: {\n            id: shortcutId\n        }\n    }\n};\n\nexport const shortcutTailClicked = (id) => {\n\n    return {\n        type: SHORTCUT_TAIL_CLICKED,\n        payload: {\n            id\n        }\n    }\n};\n\nexport const addShortcut = (name, url, tags) => {\n\n    return async (dispatch) => {\n        let response = await api.addShortcutApi(name, url, tags);\n        if (!response) {\n            return;\n        }\n\n        return response ? dispatch({\n            type: ADD_SHORTCUT,\n            payload: {\n                shortcut: response.data\n            }\n        }) : null;\n\n    };\n};\n\nexport const updateShortcut = (id, name, url, tags) => {\n\n    return async (dispatch) => {\n        let response = await api.updateShortcutApi(id, name, url, tags);\n        return response ? dispatch({\n            type: UPDATE_SHORTCUT,\n            payload: {\n                shortcut: response.data\n            }\n        }) : null;\n    };\n};\n\nexport const removeShortcut = (id) => {\n\n    return async (dispatch) => {\n        let response = await api.deleteShortcutApi(id);\n        return response ? dispatch({\n            type: REMOVE_SHORTCUT,\n            payload: {\n                shortcuts: response.data.shortcuts\n            }\n        }) : null;\n    };\n};\n\nexport const clearModalProps = () => {\n    return {\n        type: CLEAR_MODAL_PROPS\n    }\n};\n\nexport const removeTag = (id) => {\n\n    return {\n        type: REMOVE_TAG,\n        payload: {\n            id\n        }\n    }\n};\n\nexport const addTag = (id) => {\n    return {\n        type: ADD_TAG,\n        payload: {\n            id\n        }\n    }\n};\n\nexport const fetchTags = (searchText) => {\n\n    return {\n        type: FECTH_TAGS,\n        payload: {\n            searchText\n        }\n\n    }\n};\n\nexport const createTag = (tagValue) => {\n    tagValue = tagValue.toLowerCase();\n    return async (dispatch) => {\n        let response = await api.createTagApi(tagValue);\n        console.log(\"this is output \" + response)\n        return response ? dispatch({\n            type: CREATE_TAG,\n            payload: {\n                tag: response.data\n            }\n        }) : null;\n    };\n};\n\nexport const filterByTag = (id) => {\n\n    return async (dispatch) => {\n        let response = await api.getShortcutsByTagApi(id);\n        return response ? dispatch({\n            type: FILTER_BY_TAG,\n            payload: {\n                id,\n                shortcuts: response.data.shortcuts\n            }\n        }) : null;\n    };\n};\n\nexport const fetchShortcuts = (shortcuts) => {\n    return {\n        type: SHORTCUTS_FETCHED,\n        payload: {\n            shortcuts\n        }\n    }\n};\nexport const getTags = (tags) => {\n    return {\n        type: TAGS_FETCHED,\n        payload: {\n            tags\n        }\n    }\n};\n\nexport const onSelection = (id, isChecked) => {\n    return {\n        type: SHORTCUT_SELECTED,\n        payload: {\n            id,\n            isChecked\n        }\n    }\n};\n\nexport const deleteShortcuts = (ids) => {\n\n    return async (dispatch) => {\n        if (ids.length <= 0) {\n            return;\n        }\n        let response = await api.removeShortcutsApi(ids);\n        return response ? dispatch({\n            type: DELETE_SHORTCUTS,\n            payload: {\n                shortcuts: response.data.shortcuts,\n                deletedShortcutsIds: ids\n            }\n        }) : null;\n\n    };\n};\n\n\nexport const makeShortcutFavourite = (shortcut) => {\n\n    return async (dispatch) => {\n        if (!shortcut) {\n            return;\n        }\n        shortcut.isFavourite = !shortcut.isFavourite;\n        let response = await api.makeShortcutFavouriteApi(shortcut);\n        return response ? dispatch({\n            type: FAVOURITE_SHORTCUT,\n            payload: {\n                shortcut: response.data,\n            }\n        }) : null;\n\n    };\n};\n\nexport const fetchMyFavourites = () => {\n    return async (dispatch) => {\n        let response = await api.fetchMyFavouritesApi();\n        return response ? dispatch({\n            type: FETCH_FAVOURITES,\n            payload: {\n                shortcuts: response.data.shortcuts,\n            }\n        }) : null;\n\n    };\n};\n\n\n","import React from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleDrop} from \"../actions/dragDrop\";\n\nconst Droppable = (props) => {\n\n    const allowDrop = (ev) => {\n        ev.preventDefault();\n    };\n\n    const handleDragDrop = (ev) => {\n\n        ev.preventDefault();\n        let id = ev.dataTransfer.getData(\"id\");\n        console.log(id);\n        props.handleDrop(id);\n\n    };\n    return (\n        <div className=\"droppable\" onDragOver={allowDrop} onDrop={handleDragDrop}>\n            {props.children}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDrop: (id) => {\n            dispatch(handleDrop(id))\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Droppable)\n\n\n","import {REMOVE_SHORTCUT} from \"../constants/actionsConstants\";\nimport api from \"../api/shortcuts-api\";\n\nexport const handleDrop = (id) => {\n\n    return async (dispatch) => {\n        let response = await api.deleteShortcutApi(id);\n        return response ? dispatch({\n            type: REMOVE_SHORTCUT,\n            payload: {\n                shortcuts: response.data.shortcuts\n            }\n        }) : null;\n    };\n};\n","import React from 'react';\n\nconst CheckBox = (props) => {\n\n\n    const handleOnClick = (event) => {\n        event.stopPropagation();\n        props.handleOnChange(event.target.checked);\n    };\n    return (\n        <input type=\"checkbox\" checked={props.isSelected} onClick={handleOnClick}/>\n    )\n};\n\nexport default CheckBox;\n","import React, {useState} from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckBox from \"./CheckBox\";\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nfunction QuickShortcut(props) {\n\n    const handleEditMenuClicked = (shortcutId, event) => {\n        event.stopPropagation();\n        props.handleEditMenuClick(shortcutId);\n    };\n\n\n    let logoView = null;\n    if (props.id === \"ADD_SHORTCUT\") {\n        logoView = <div className=\"icon\">+</div>\n    } else {\n        let faviconURL = \"https://api.statvoo.com/favicon/?url=\" + props.url;\n        logoView = (<img className=\"icon\" title=\"\" alt=\"\" height=\"60\" width=\"60\"\n                         src={faviconURL}/>)\n    }\n\n    const handleOnClick = () => {\n        props.handleClick(props.id);\n    };\n\n    let className = \"shortcut\";\n    if(props.isSelected) {\n        className += \" selected\"\n    }\n\n    let favouriteIcon = <StarBorderIcon/>;\n\n    if(props.isFavourite) {\n        favouriteIcon = <StarIcon/>\n    }\n\n\n    const handleFavouriteIconClicked = (event) => {\n        event.stopPropagation();\n        props.favouriteClicked();\n    };\n\n    return (\n\n        <div className={className}>\n                <div onClick={handleOnClick} className=\"shortcut-anchor\">\n                    <Tooltip title={props.name}>\n                        <div className=\"shortcut-content\">\n                            {logoView}\n                            <div className=\"shortcut-name\">\n                                <span> {props.name}</span>\n                            </div>\n                        </div>\n                    </Tooltip>\n                    {props.id !== \"ADD_SHORTCUT\" &&\n                    <div className=\"shortcut-options\">\n                        <div className=\"left-options\">\n                            <div className=\"select-checkbox\">\n                                <CheckBox   isSelected={props.isSelected}\n                                            handleOnChange={props.onCheckboxClicked.bind(this,props.id)}/>\n                            </div>\n                            <div className=\"favourite\" onClick={handleFavouriteIconClicked}>\n                                {favouriteIcon}\n                            </div>\n                        </div>\n                        <div className=\"right-options\">\n                            <div className=\"shortcut-edit-menu\" onClick={handleEditMenuClicked.bind(this, props.id)} >\n                                <i className=\"fa fa-ellipsis-v\"></i>\n                            </div>\n                        </div>\n                    </div>}\n                </div>\n        </div>\n    );\n}\n\nexport default QuickShortcut;\n","import React from 'react';\n\nconst Draggable = (props) => {\n\n\n    const handleDragStart = (ev) => {\n        ev.dataTransfer.setData(\"id\", props.id);\n    };\n\n    return (\n        <div draggable=\"true\"  onDragStart={handleDragStart} className=\"draggable\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default Draggable;\n\n","import React from 'react';\nimport QuickShortcut from \"./QuickShortcut\";\nimport Draggable from \"./DraggableComponent\";\nimport {\n    deleteShortcuts,\n    editMenuClicked,\n    makeShortcutFavourite,\n    onSelection,\n    shortcutTailClicked,\n} from \"../actions/shortcutActions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport _ from 'lodash'\n\nconst ShortcutContainer = (props) => {\n\n    let shortcuts = Object.values(props.shortcuts ||[]);\n    let emptyShortcut = {\n        name: \"Add Shortcut\",\n        _id: \"ADD_SHORTCUT\"\n    };\n    shortcuts.unshift(emptyShortcut);\n    return (\n        <div className=\"shortcut-container\">\n            {shortcuts.map(shortcut => {\n\n                let isSelected = _.includes(props.selectedIds, shortcut._id);\n                return <Draggable id={shortcut._id}>\n                    <QuickShortcut name={shortcut.name}\n                                   id={shortcut._id}\n                                   url={shortcut.url}\n                                   isSelected={isSelected}\n                                   isFavourite={shortcut.isFavourite}\n                                   handleEditMenuClick={props.handleEditMenuClick}\n                                   handleClick={props.shortcutTailClicked}\n                                   onCheckboxClicked = {props.onCheckboxClicked}\n                                   favouriteClicked={props.makeShortcutFavourite.bind(this,shortcut)}\n                    />\n                </Draggable>\n\n\n            })}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        shortcuts: state.shortcuts,\n        selectedIds : state.selectedShortcuts || []\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        handleEditMenuClick: (id) => {\n            dispatch(editMenuClicked(id))\n        },\n        shortcutTailClicked: (id) => {\n            dispatch(shortcutTailClicked(id))\n        },\n        onCheckboxClicked : (id, isChecked) => {\n            dispatch(onSelection(id, isChecked));\n        },\n        deleteShortcuts : () => {\n            dispatch(deleteShortcuts())\n        },\n        makeShortcutFavourite : (shortcut) => {\n            dispatch(makeShortcutFavourite(shortcut));\n        }\n\n\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ShortcutContainer)\n\n\n","import React from 'react';\nimport Chip from \"@material-ui/core/Chip/Chip\";\n\nconst CustomChip = (props) => {\n\n    return (\n        <Chip\n            label={props.value}\n            className={\"chip\"}\n            clickable={false}\n            onDelete={props.onDelete.bind(this, props.id)}\n        />\n    )\n};\n\nexport default CustomChip;\n","import React from 'react';\nimport CustomChip from \"./CustomChip\";\n\nconst ChipList = (props) => {\n\n    let tags = props.tags || [];\n    const tagsView = props.appliedTagIds.map((tagId) => {\n        return  <CustomChip\n            value={tags[tagId].value}\n            id={tagId}\n            onDelete={props.removeTag.bind(this, tagId)}\n        />\n    });\n\n    return  (\n        <div className=\"chip-container\">\n            {tagsView}\n        </div>\n    )\n};\n\nexport default ChipList;\n","import React from 'react';\nimport SearchView from \"./SearchView\";\nimport ChipList from \"./ChipList\";\n\nconst TagsContainer = (props) => {\n\n    return (\n        <div>\n           <SearchView\n               placeholder={\"Search tags\"}\n               disableButton={true}\n               handleSearch ={props.handleSearch}\n               context=\"shortcut_tags\"\n               popperData={props.popperData}\n               addTag={props.addTag}\n               createTag={props.createTag}\n           />\n            <ChipList appliedTagIds={props.appliedTags}\n                      tags={props.tags}\n                      removeTag={props.removeTag}/>\n        </div>\n\n    )\n\n};\n\nexport default  TagsContainer;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TagsContainer from \"./TagsContainer\";\nimport SearchView from \"./SearchView\";\n\nexport default function CustomDialog(props) {\n    let editingName = props.shortcut.name || \"\";\n    let editingUrl = props.shortcut.url || \"\";\n    const [name, setName] = React.useState(editingName);\n    const [url, setUrl] = React.useState(editingUrl);\n    const handleDone = () => {\n        props.handleDoneButtonClicked(props.shortcut._id, name, url, props.shortcut.tags);\n    };\n\n    const handleCancel = () => {\n        props.handleCancelButtonClicked();\n    };\n\n\n    const handleRemove = () => {\n        props.handleRemoveButtonClicked(props.shortcut._id);\n    };\n\n    let isDoneHidden = !(name.trim() && url.trim())\n    let isRemoveHidden = !props.shortcut._id ? true : false;\n\n    return (\n        <div>\n            <Dialog open={props.open} aria-labelledby=\"form-dialog-title\" onClick={(e) => {\n                e.stopPropagation()\n            }}>\n                <DialogTitle id=\"form-dialog-title\">Add Shortcut</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        onChange={(event) => setName(event.target.value)}\n                        value={name}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"url\"\n                        label=\"url\"\n                        type=\"text\"\n                        fullWidth\n                        value={url}\n                        onChange={(event) => setUrl(event.target.value)}\n                    />\n\n\n                    <TagsContainer appliedTags={props.shortcut.tags}\n                                   tags={props.tags}\n                                   handleSearch={props.handleSearch}\n                                   popperData={props.popperData}\n                                   removeTag={props.removeTag}\n                                   addTag={props.addTag}\n                                   createTag={props.createTag}/>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={isRemoveHidden} onClick={handleRemove} color=\"primary\">\n                        Remove\n                    </Button>\n                    <Button onClick={handleCancel} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={isDoneHidden} onClick={handleDone} color=\"primary\">\n                        Done\n                    </Button>\n\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n\n    let  className=\"shortcut-button black-theme\";\n    if(props.isActive) {\n        className +=\" active\"\n    }\n\n    return (\n        <button type=\"button\" className={className} onClick={props.handleOnClick}>{props.value}</button>\n    )\n};\n\nButton.propTypes = {\n    handleOnClick: PropTypes.func,\n    value : PropTypes.string,\n    isActive : PropTypes.bool\n};\nButton.defaultProps = {\n    isActive: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport SimpleSearchView from \"./SimpleSearchView\";\nimport {handleSearchClicked} from \"../actions/navbar\";\nimport Button from \"./Button\"\n\nimport connect from \"react-redux/es/connect/connect\";\nimport {deleteShortcuts, fetchMyFavourites} from \"../actions/shortcutActions\";\n\nconst FilterContainer = (props) => {\n\n\n\n    return (\n        <div className=\"filters-section\">\n            <div className=\"std-filters\">\n                <div className=\"constant\">\n                    Sort By\n                </div>\n                <div className=\"form-group\" style={{margin: 0}}>\n                    <select className=\"form-control selected-filter\" id=\"exampleFormControlSelect1\">\n                        <option>Created by</option>\n                        <option>Importance</option>\n                    </select>\n                </div>\n                <div>\n                    <Button value={\"delete\"}\n                            handleOnClick={props.deleteShortcuts.bind(this, props.selectedShortcutIds)}></Button>\n                </div>\n                <div>\n                    <Button isActive={props.isMyFavouritesActive} value={\"My Favourites\"}\n                            handleOnClick={props.myFavouritesClicked}></Button>\n                </div>\n\n            </div>\n            <div>\n                <SimpleSearchView context=\"shortcut\"\n                                  placeholder={\"Search shortcuts\"}\n                                  handleSearch={props.handleShortcutSearch}\n                                  className=\"black-theme\"/>\n            </div>\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedShortcutIds: state.selectedShortcuts,\n        isMyFavouritesActive : state.isMyFavouritesClicked || false\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleShortcutSearch: (context, searchText) => {\n            dispatch(handleSearchClicked(searchText, context))\n        },\n        deleteShortcuts: (ids) => {\n            dispatch(deleteShortcuts(ids))\n        },\n        myFavouritesClicked : () => {\n            dispatch(fetchMyFavourites());\n        }\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FilterContainer)\n\n\n\n\n\n\n\n","import React from 'react';\nimport ShortcutContainer from \"./ShortcutContainer\";\nimport Dialog from \"./CustomDialog\";\nimport {\n    addShortcut, addTag,\n    clearModalProps, createTag,\n    filterByTag, removeShortcut, removeTag,\n    updateShortcut\n} from \"../actions/shortcutActions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport FilterContainer from \"./FiltersContainer\";\nimport {handleSearchClicked} from \"../actions/navbar\";\n\nconst ContentView = (props) => {\n\n    let modalView = null;\n    if (props.isDialogOpen) {\n        modalView = <Dialog open={props.isDialogOpen}\n                            shortcut={props.editingShortcutDetails.shortcut}\n                            tags={props.tags}\n                            handleDoneButtonClicked={props.doneButtonClicked}\n                            handleCancelButtonClicked={props.cancelClicked}\n                            handleRemoveButtonClicked={props.removeClicked}\n                            popperData={props.popperData}\n                            handleSearch={props.handleTagSearch}\n                            addTag={props.addTag}\n                            removeTag={props.removeTag}\n                            fetchTags={props.fetchTags}\n                            createTag={props.createTag}/>;\n    }\n\n    return (\n        <div className=\"col body-container\">\n            <FilterContainer/>\n            <ShortcutContainer/>\n            {modalView}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        popperData: state.editingShortcutDetails.popperData,\n        tags: state.tags,\n        isDialogOpen: state.isDialogOpen,\n        editingShortcutDetails: state.editingShortcutDetails,\n        selectedTag: state.selectedTag || \"\",\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        doneButtonClicked: (id, name, url, tags) => {\n            if (id) {\n                dispatch(updateShortcut(id, name, url, tags));\n            } else {\n                dispatch(addShortcut(name, url, tags));\n            }\n        },\n        cancelClicked: () => {\n            dispatch(clearModalProps());\n        },\n        removeClicked: (id) => {\n            dispatch(removeShortcut(id));\n        },\n        removeTag: (id) => {\n            dispatch(removeTag(id))\n        },\n        addTag: (id) => {\n            dispatch(addTag(id));\n        },\n        filterByTag: (id) => {\n            dispatch(filterByTag(id));\n        },\n        createTag: (tagValue) => {\n            dispatch(createTag(tagValue))\n        },\n        handleTagSearch: (context, searchText) => {\n            dispatch(handleSearchClicked(searchText, context))\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ContentView)\n\n\n","import React, {useEffect} from 'react';\nimport SidebarView from \"./SidebarView\";\nimport {handleSearchClicked} from \"../actions/navbar\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {getTags, filterByTag, fetchShortcuts} from \"../actions/shortcutActions\";\nimport Droppable from \"./DroppableComponent\";\nimport ContentView from \"./ContentView\";\nimport axios from \"axios\";\nimport api from './../api/shortcuts-api'\n\nconst MainBodyView = (props) => {\n\n\n    api.removeShortcutsApi([1,2]);\n    useEffect(() => {\n        axios.get('http://localhost:1234/tags')\n            .then(function (response) {\n                console.log(response);\n                props.fetchTags(response.data.tags)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios.get('http://localhost:1234/shortcuts')\n            .then(function (response) {\n                props.fetchShortcuts(response.data.shortcuts)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }, []);\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <SidebarView\n                    tags={props.tags}\n                    handleSearch={props.handleShortcutSearch.bind(\"shortcut\")}\n                    filterByTag={props.filterByTag}\n                    selectedTag={props.selectedTag}/>\n                <ContentView/>\n                <Droppable>\n                    <div className=\"col delete-drop-section drag-drop\">\n                        <p>Drop here to delete</p>\n                    </div>\n                </Droppable>\n            </div>\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tags: state.tags,\n        selectedTag: state.selectedTag || \"\",\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleShortcutSearch: (context, searchText) => {\n            dispatch(handleSearchClicked(searchText, context))\n        },\n        filterByTag: (id) => {\n            dispatch(filterByTag(id));\n        },\n        fetchTags: (tags) => {\n            dispatch(getTags(tags))\n        },\n        fetchShortcuts : (shortcuts) => {\n            dispatch(fetchShortcuts(shortcuts))\n        }\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainBodyView)\n\n","import React from 'react';\nimport NavBar from \"./NavBar\";\nimport MainBodyView from \"./MainBodyView\";\nimport './main.scss';\n\nconst Home = (props) => {\n\n    return (\n\n        <>\n            <div className=\"custom-bg\"></div>\n            <NavBar/>\n            <MainBodyView/>\n        </>\n    )\n};\n\n\n\nexport default Home;\n","import React from 'react';\n\n\nimport {createStore, applyMiddleware} from \"redux\";\nimport shortcutReducer from \"./reducers/shortcutReducer\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport Home from \"./components/Home\";\nimport thunk from 'redux-thunk'\n\nfunction App() {\n    const store = createStore(shortcutReducer,applyMiddleware(thunk));\n    return (\n        <Provider store={store}>\n            <Home/>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}